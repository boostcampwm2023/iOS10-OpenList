name: CI/CD Docker

on:
  pull_request:
    types: [closed]
    branches:
      - 'server/release/*'

env:
  DOCKER_IMAGE: ghcr.io/${{ github.actor }}/nest-openlist-deploy
  VERSION: ${{ github.sha }}
  NAME: go_cicd

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Check out source code
        uses: actions/checkout@v2
      - name: Generate .env file
        run: |
          cat << EOF > ./server/.env
          # ... 환경 변수
          EOF
      - name: Generate .p8 file
        run: |
          cat << EOF > ./server/.p8
          ${{ secrets.P8 }}
          EOF
      - name: Set up docker buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
      - name: Cache docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ env.VERSION }}
          restore-keys: |
            ${{ runner.os }}-buildx-
      - name: Login to ghcr
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          builder: ${{ steps.buildx.outputs.name }}
          context: ./server
          file: ./server/Dockerfile
          push: true
          tags: ${{ env.DOCKER_IMAGE }}:latest

  # 배포 Job - 서버 1
  deploy-server1:
    needs: build
    name: Deploy to Server 1
    runs-on: [ self-hosted, label-server1 ] 
    steps:
      - name: Login to ghcr
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_TOKEN }}
      - name: Docker run (Server 1)
        run: |
          docker stop go_cicd1 || true
          docker rm go_cicd1 || true
          docker pull ${{ env.DOCKER_IMAGE }}:latest
          docker run -d -p 3000:3000 --name go_cicd1 --restart always ${{ env.DOCKER_IMAGE }}:latest

  # 배포 Job - 서버 2
  deploy-server2:
    needs: build
    name: Deploy to Server 2
    runs-on: [ self-hosted, label-server2 ]
    steps:
      - name: Login to ghcr
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_TOKEN }}
      - name: Docker run (Server 2)
        run: |
          docker stop go_cicd2 || true
          docker rm go_cicd2 || true
          docker pull ${{ env.DOCKER_IMAGE }}:latest
          docker run -d -p 3000:3000 --name go_cicd2 --restart always ${{ env.DOCKER_IMAGE }}:latest
